name: Reusable Blackduck Scan Workflow

on:
  workflow_call:
    inputs:
      SourcePath:
        type: string
        required: true
      ProjectVersion:
        type: string
        required: true
      ExcludeDirectories:
        type: string
        required: true
      ProjectTag:
        type: string
        required: true
      NoticeReportPath:
        type: string
        required: true
      RiskReportPath:
        type: string
        required: true
    secrets:
      NEW_GITHUB_TOKEN:
        required: true
      BLACKDUCK_API_TOKEN:
        required: true
      BLACKDUCK_URL:
        required: true
jobs:
  blackduck_scan:
   runs-on: [ ubuntu-latest ]
   steps:
    - uses: actions/checkout@v4
    - name: Running Black Duck Detect and Scan
      shell: powershell
      run:  write-host "${{ github.workspace }}"
            write-host "${{ github.repository }}"
            $blackduck_properties += "--blackduck.url=${{ secrets.BLACKDUCK_URL }}",
                              "--detect.policy.check.fail.on.severities="ALL"",
                              "--blackduck.api.token=${{ secrets.BLACKDUCK_API_TOKEN }}",
                              "--detect.source.path=${{ inputs.SourcePath }}",
                              "--detect.project.name=${{ inputs.ProjectName }}",
                              "--detect.project.version.name=${{ inputs.ProjectVersion }}",
                              "--detect.project.codelocation.unmap="TRUE"",
                              "--detect.project.tags=${{ inputs.ProjectTag }}",
                              "--detect.detector.search.depth= ${{ inputs.FolderSearchDepth}}",
                              "--detect.notices.report="TRUE"",
                              "--detect.notices.report.path=${{ inputs.NoticeReportPath}}",
                              "--detect.risk.report.pdf="TRUE"",
                              "--detect.risk.report.pdf.path=${{ inputs.RiskReportPath}}",
                              "--detect.blackduck.signature.scanner.copyright.search="TRUE"",
                              "--detect.blackduck.signature.scanner.license.search="TRUE"",                      
                              "--detect.blackduck.signature.scanner.upload.source.mode="TRUE"",
                              "--detect.excluded.directories=${{ inputs.ExcludeDirectories}}""
            echo "Running Black Duck Scan on ${{ runner.os }}"
            echo "blackduck_properties = $blackduck_properties"
            if ( "${{ runner.os }}" -eq "Windows_NT" ) {
              powershell "[Net.ServicePointManager]::SecurityProtocol = 'tls12'; irm https://detect.synopsys.com/detect9.ps1?$RANDOM | iex; detect" $blackduck_properties
              }
            elseif ( "${{ runner.os }}" -eq "Linux" ) {
              bash >(curl -s -L https://detect.synopsys.com/detect9.sh) $blackduck_properties    
              }
            else
            {
              echo "${{ runner.os }} is not supported."
              }"
                  
